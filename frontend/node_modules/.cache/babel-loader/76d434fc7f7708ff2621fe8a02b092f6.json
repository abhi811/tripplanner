{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Projects/trip2/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Signup from './Signup';\nimport App from './App';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.doCheck = this.doCheck.bind(this);\n    this.ajax = this.ajax.bind(this);\n  }\n\n  ajax(url, method, data) {\n    return new Promise(function (resolve, reject) {\n      var request = new XMLHttpRequest();\n      request.open(method, url, true);\n      request.responseType = 'text';\n      request.setRequestHeader(\"Content-Type\", \"application/json\");\n\n      request.onreadystatechange = function () {\n        if (request.readyState === XMLHttpRequest.DONE) {\n          if (request.status === 200) {\n            resolve(request.responseText);\n          } else {\n            reject(Error(request.statusText));\n          }\n        }\n      };\n\n      request.onerror = function () {\n        reject(Error(\"Network Error\"));\n      };\n\n      request.send(data);\n    });\n  }\n\n  doCheck() {\n    let username = document.getElementById(\"usrname\");\n    let password = document.getElementById(\"psw\");\n    let data = {\n      'username': username.value,\n      'password': password.value\n    };\n    this.ajax('http://localhost:4000/finduser', 'POST', JSON.stringify(data)).then(function (result) {\n      var res = JSON.parse(result);\n\n      if (res.status != false) {\n        return React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"home/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(App, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }))));\n      } else {\n        alert(\"You ain't present\");\n      }\n    }).catch(function () {\n      alert(\"You ain't present\");\n      console.log(\"You ain't present\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"reg-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"usrname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"usrname\",\n      name: \"usrname\",\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"psw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"input-field\",\n      id: \"psw\",\n      name: \"psw\",\n      title: \"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        this.doCheck();\n      },\n      id: \"LoginSubmit\",\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"submit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"home/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"Signup-submit\",\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"submit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Signup\")), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"home/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Signup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/abhishek/Projects/trip2/src/components/Login.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Signup","App","Login","constructor","props","doCheck","bind","ajax","url","method","data","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","setRequestHeader","onreadystatechange","readyState","DONE","status","responseText","Error","statusText","onerror","send","username","document","getElementById","password","value","JSON","stringify","then","result","res","parse","alert","catch","console","log","render","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nimport Signup from './Signup';\nimport App from './App';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.doCheck = this.doCheck.bind(this);\n        this.ajax = this.ajax.bind(this);\n    }\n\n    ajax(url, method, data) {\n        return new Promise(function(resolve, reject) {\n          var request = new XMLHttpRequest();\n          request.open(method, url, true);\n          request.responseType = 'text';\n          request.setRequestHeader(\"Content-Type\", \"application/json\");\n          request.onreadystatechange = function() {\n            if (request.readyState === XMLHttpRequest.DONE) {\n              if (request.status === 200) {\n                resolve(request.responseText);\n              } else {\n                reject(Error(request.statusText));\n              }\n            }\n          };\n          request.onerror = function() {\n            reject(Error(\"Network Error\"));\n          };\n          request.send(data);\n          \n        });\n      }\n\n    doCheck() {\n        let username = document.getElementById(\"usrname\");\n        let password = document.getElementById(\"psw\");\n        let data = {\n            'username' : username.value,\n            'password' : password.value\n        }\n\n        this.ajax('http://localhost:4000/finduser', 'POST', JSON.stringify(data)).then(function(result) {\n        var res = JSON.parse(result);\n        if(res.status != false) {\n            return (<Router>\n                <Switch>\n                    <Route path=\"home/dashboard\">\n                        <App />\n                    </Route>\n                </Switch>\n            </Router>);\n        }\n        else {\n            alert(\"You ain't present\");\n        }\n\n        })\n        .catch(function() {\n        alert(\"You ain't present\");\n        console.log(\"You ain't present\");\n        });\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n               <form id=\"reg-form\">\n                    <div className=\"username\">\n                        <label for=\"usrname\">Username</label>\n                        <input type=\"text\" id=\"usrname\" name=\"usrname\" className=\"input-field\"></input>\n                    </div>\n                    <div className=\"password\">\n                        <label for=\"psw\">Password</label>\n                        <input type=\"password\" className=\"input-field\" id=\"psw\" name=\"psw\" title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"></input>\n                    </div>\n                    <button onClick={(e) => {e.preventDefault(); this.doCheck()}} id=\"LoginSubmit\" type=\"submit\" value=\"Submit\" className=\"submit-form\" >Login</button>\n                    <Router>\n                        <Link to=\"home/signup\">\n                            <button id=\"Signup-submit\" type=\"submit\" value=\"Submit\" className=\"submit-form\" >Signup</button>\n                        </Link>\n                        <Switch>\n                            <Route path=\"home/signup\">\n                                <Signup />\n                            </Route>\n                        </Switch>\n                    </Router>\n               </form>\n            </div>\n\n        )\n    }\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}