{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Projects/trip2/src/components/Places.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadPlaces } from '../store/places';\nimport { add_place } from '../store/itineraray';\n\nclass Places extends Component {\n  constructor(props) {\n    super(props);\n    this.itemUi = this.itemUi.bind(this); //this.add_place = this.add_place.bind(this);\n  } // componentDidMount() {\n  //     const {selectedLocation} = this.props;\n  //     console.log(selectedLocation);\n  // }\n\n\n  itemUi(places) {\n    return React.createElement(\"div\", {\n      key: places.id,\n      className: \"product-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: places.name,\n      src: places.poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"product-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, places.name), React.createElement(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        this.props.add_place(places.name);\n      },\n      className: \"button-addToTrip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Add to trip\")));\n  }\n\n  render() {\n    const _this$props = this.props,\n          places = _this$props.places,\n          selected = _this$props.selected;\n    console.log(selected);\n    return React.createElement(\"div\", {\n      className: \"app-places\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, places.map(this.itemUi));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    places: state.places.list,\n    selected: state.itinerary.selected_list\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadPlaces: id => {\n      dispatch(loadPlaces(id));\n    },\n    add_place: place => {\n      dispatch(add_place(place));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Places);","map":{"version":3,"sources":["/home/abhishek/Projects/trip2/src/components/Places.js"],"names":["React","Component","connect","loadPlaces","add_place","Places","constructor","props","itemUi","bind","places","id","name","poster","e","preventDefault","render","selected","console","log","map","mapStateToProps","state","list","itinerary","selected_list","mapDispatchToProps","dispatch","place"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAKA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC3BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd,CAFe,CAGf;AACH,GAL0B,CAO3B;AACA;AACA;AACA;;;AAEAD,EAAAA,MAAM,CAACE,MAAD,EAAS;AAEX,WACI;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAjB;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAED,MAAM,CAACE,IAAjB;AAAuB,MAAA,GAAG,EAAEF,MAAM,CAACG,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCH,MAAM,CAACE,IAAvC,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAGE,CAAD,IAAO;AAACA,QAAAA,CAAC,CAACC,cAAF;AAAoB,aAAKR,KAAL,CAAWH,SAAX,CAAqBM,MAAM,CAACE,IAA5B;AAAmC,OAAhF;AAAkF,MAAA,SAAS,EAAC,kBAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAFJ,CADJ;AAWH;;AAEDI,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKT,KAD3B;AAAA,UACEG,MADF,eACEA,MADF;AAAA,UACUO,QADV,eACUA,QADV;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,MAAM,CAACU,GAAP,CAAW,KAAKZ,MAAhB,CADL,CADJ;AAKH;;AAnC0B;;AAuC/B,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHZ,IAAAA,MAAM,EAAEY,KAAK,CAACZ,MAAN,CAAaa,IADlB;AAEHN,IAAAA,QAAQ,EAAEK,KAAK,CAACE,SAAN,CAAgBC;AAFvB,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHxB,IAAAA,UAAU,EAAGQ,EAAD,IAAQ;AAChBgB,MAAAA,QAAQ,CAACxB,UAAU,CAACQ,EAAD,CAAX,CAAR;AACH,KAHE;AAIHP,IAAAA,SAAS,EAAGwB,KAAD,IAAW;AAClBD,MAAAA,QAAQ,CAACvB,SAAS,CAACwB,KAAD,CAAV,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAYA,eAAe1B,OAAO,CAClBmB,eADkB,EAElBK,kBAFkB,CAAP,CAGbrB,MAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadPlaces } from '../store/places';\nimport { add_place } from '../store/itineraray';\n\n\n\n\nclass Places extends Component {\n    constructor(props) {\n        super(props);\n        this.itemUi = this.itemUi.bind(this);\n        //this.add_place = this.add_place.bind(this);\n    }\n\n    // componentDidMount() {\n    //     const {selectedLocation} = this.props;\n    //     console.log(selectedLocation);\n    // }\n\n    itemUi(places) {\n    \n        return (\n            <div key={places.id} className=\"product-item\">\n                <img alt={places.name} src={places.poster} />\n                <div className=\"product-detail\">\n                    <div className=\"product-title\">{places.name}</div>\n                    <button onClick={(e) => {e.preventDefault(); this.props.add_place(places.name);}} className=\"button-addToTrip\">\n                        Add to trip\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        const {places, selected} = this.props;\n        console.log(selected);\n        return (\n            <div className=\"app-places\">\n                {places.map(this.itemUi)}\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        places: state.places.list,\n        selected: state.itinerary.selected_list\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadPlaces: (id) => {\n            dispatch(loadPlaces(id));\n        },\n        add_place: (place) => {\n            dispatch(add_place(place));\n        }\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Places);"]},"metadata":{},"sourceType":"module"}